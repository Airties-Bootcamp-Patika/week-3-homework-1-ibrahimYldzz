Q1: Statik kod analizi: Sonarqube
A1: Kod analizi 2'ye ayrılır. Bunlar dinamik ve statik kod analizidir. Dinamik kod analizi run time’de yapılan analizdir. Statik ise kodu derlemeden yapılan analizdir. Sonarqube de statik kod analizi yapan bir araçtır demiştik. Bu sayede geliştirdiğiniz projede temiz kod konusunda sizi uyarır.

Q2: Kubernetes yapısı
A2: Kubernetes Google tarafından GO dilinde geliştirilmiş Cloud Native Computing Foundation tarafından desteklenen mevcut konteyner haline getirilmiş uygulamalarınızı otomatik deploy etmek, sayılarını arttırıp azaltmak gibi işlemler ile birlikte yönetmenizi sağlayan bir Konteyner kümeleme (container cluster) aracıdır.Kubernetes’in yapısına göz atacak olursak master ve worker dedikleri node’lardan oluşuyor. Bu worker dediğimiz node’lar içerisinde pod’lar ve pod’ların içerisinde konteyner’larımız bulunmaktadır.Bu yapı kendi içinde overlay dediğimiz bir network ile haberleşiyor.

API Server:Master sunucumuza gelen tüm REST requestlerin yönetilmesinden sorumludur.Aslınsa Cluster’ın beyni diyebiliriz.Json file’ları ile yönetilir.

Controller Manager:Temel olarak, bir denetleyicidir, kümenin durumunu API Server izleme özelliğiyle izler ve bildirildiğinde, geçerli durumu istenen duruma doğru hareket ettirmek için gerekli değişiklikleri yapar.

Scheduler: Bir pod’un hangi node üzerinde çalışacağına karar verir , kubelet’i tetikler ve ilgili pod ve içindeki konteyner oluşturulur.Kısacası yeni bir pod oluşturulması isteğine karşı API server’ı izler.

Etcd: Coreos tarafında yaratılmış open source distributed,tutarlı ve izlenebilir bir key value store (nosql database) diyebiliriz.Redhat Coreos ‘si satın aldı aslında konteyner teknolojisinde çok güzel hamleler atıyor.

Kubelet:Node üzerindeki ana kubernetes ajanıdır.API server’dan gelecek isteklere karşı API Server’ı izler.İlgili docker servisi ile konuşarak Pod’u ayağa kaldırır ve bunun bilgisini API Server’a iletir.

Kube-Proxy: Kubernetes network’u diyebiliriz.Pod’lara IP adresi proxy sayesinde atanır.Bir pod’un içindeki tüm konteyner’lar bir adet paylaşımlı IP ‘yi kullanır.Kube-proxy aynı zamanda bir servisin altındaki tüm pod’lara load-balance özelliği kazandırır.

Container Engine:Konteyner yönetimini yapar.İmage’ları ilgili registry üzerinden çeker ve konteyner’ların start ve stop olmalarını sağlar.

Pod:Konteyner ‘ların çalışma alanı diyebilir.Bir pod içerisinde birden fazla konteyner çalışabilir.Kubernetes tarafında çalışma şekli gereği yeni bir deploy isteği geldiğinde pod’un yeni versiyonu oluşturulur ve çalıştığı görüldüğünde diğer pod versiyonu kapatılır.Dolayısıyla pod içerisinde birden fazla konteyner olduğu durumda diğer uygulamala konteyner’ları etkileneceğinden bir pod içerisinde bir konteyner tavsiye edilir.Pod öldüğünde tekrar geri kalkmaz aynı imajdan onun yerine yeni bir pod ortaya çıkar.

Q3: Orchestration yapısı
A3: Orchestration, Konteyner’ların node’lar içerisine dağıtılması ve yönetilmesinden sorumlu veya cluster yönetimi sağlayan yazılım diyebiliriz. Clusterda bulunan tüm sunucuların yüksek erişilebilir yapıda çalışmasını sağlar.Herhangi containers’lerin çalıştığı bir node’ta problem olunca kesinti olmadan çalışmaya devam eder.Alt yapıyı bir bütün olarak görme ve yönetme imkanı verir.Node’larda 10’dan fazla containers yüklenince bunun kaynak durumu, yönetilmesi, scale up/out gibi işlemler operasyonel yük olacaktır. Özetle, Cluster yönetme,kaynak limitasyonu yönetme,networku yönetme, scale out/up işlemlerini yapar.

Q4: npm nedir ve niçin kullanılır?
A4: NPM(Node Package Manager), JavaScript’in paket yöneticisidir.  JavaScript geliştiricilerin diğer geliştiricilerin paylaştığı kodu tekrar tekrar kullanmasını kolaylaştırır. Yeni uygulamalara kolayca uyarlama yapabilmeyi sağlar. Birisi kodunu revize ettiğinde, uygulamanızı yeni geliştirilmiş kodu dahil edecek şekilde kolayca güncelleyebilirsiniz.

Geliştiriciler, bir sorunun üstesinden gelebilecek küçük bir kod bloğu oluşturur ve kodu, npm kurallarına uyan bir dizine “paket” halinde yerleştirir. Web için geliştiridiğiniz uygulamanız onlarca ve ya yüzlerce küçük paketten oluşacaktır. Geliştiriciler, daha büyük özel çözümler oluşturmak için bu paketleri kullanabilir.

Q5: Agile-Scrum nedir?
A5: Agile modeli proje yönetimi, yazılım geliştirme sürecinde karşılaşılan problemleri çözmek üzere, tekrarlanan yazılım geliştirme modeli taban alınarak geliştirilmiş, sık aralıklarla parça parça yazılım teslimatını ve değişikliği teşvik eden bir yazılım geliştirme modeli.
Agile manifesto:
İş süreçleri ve araçlardan ziyade bireyler ve bireyler arasındaki etkileşim değerlidir.

Kapsamlı bir dokümantasyon sürecinden ziyade, çalışan bir yazılım ortaya koymak daha önemlidir.

Müşteri ile işbirliği yapmak, sözleşme görüşmelerinden daha önemlidir.

Değişime cevap vermek, mevcut planı izlemekten daha önemlidir. 

Scrum, Kendi rehberindeki tanımlaması “İnsanların mümkün olan en yüksek değere sahip ürünleri üretken ve yaratıcı bir şekilde geliştirirken, karmaşık ve adaptasyona açık sorunları ele alabildikleri bir çerçeve” olan scrum, agile proje yönetme metodolojilerinden biridir.